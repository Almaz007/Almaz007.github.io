const t=[];for(let e=0;e<256;++e)t.push((e+256).toString(16).slice(1));function i(e,n=0){return(t[e[n+0]]+t[e[n+1]]+t[e[n+2]]+t[e[n+3]]+"-"+t[e[n+4]]+t[e[n+5]]+"-"+t[e[n+6]]+t[e[n+7]]+"-"+t[e[n+8]]+t[e[n+9]]+"-"+t[e[n+10]]+t[e[n+11]]+t[e[n+12]]+t[e[n+13]]+t[e[n+14]]+t[e[n+15]]).toLowerCase()}let u;const y=new Uint8Array(16);function a(){if(!u){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");u=crypto.getRandomValues.bind(crypto)}return u(y)}const s=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),l={randomUUID:s};function m(e,n,c){var r;if(l.randomUUID&&!e)return l.randomUUID();e=e||{};const o=e.random??((r=e.rng)==null?void 0:r.call(e))??a();if(o.length<16)throw new Error("Random bytes length must be >= 16");return o[6]=o[6]&15|64,o[8]=o[8]&63|128,i(o)}const b=e=>Object.keys(e),p=(e,n,c)=>{const o=new Blob([e],{type:c}),r=document.createElement("a");r.download=n;const d=new FileReader;d.readAsDataURL(o),d.onload=function(){typeof d.result=="string"?(r.href=d.result,r.click()):console.error("Unexpected reader.result type:",typeof d.result)}},g=(()=>{const e=[];for(let n=0;n<256;n++){let c=n;for(let o=0;o<8;o++)c&1?c=3988292384^c>>>1:c=c>>>1;e[n]=c>>>0}return e})();function U(e){let n=4294967295;for(let c=0;c<e.byteLength;c++){const o=e[c];n=n>>>8^g[(n^o)&255]}return(n^4294967295)>>>0}export{U as c,p as d,b as g,m as v};
