import{c as m}from"./shallow-DU2pzESy.js";const b=m((r,h)=>({tempOscillographicOffsets:{},oscillographicOffsetsFull:{},counter:0,setOscillographicOffsets:()=>{},initOscillographicOffsets:(s,i,l,t,e)=>{r(O=>({oscillographicOffsetsFull:{...O.oscillographicOffsetsFull,[s]:{name:i,send:!0,timePoints:[],values:[],lengthMemory:l,dataType:t,typeView:e}},tempOscillographicOffsets:{...O.tempOscillographicOffsets,[s]:{name:i,send:!0,timePoints:[],values:[],lengthMemory:l,dataType:t,typeView:e}}}))},clearOscillographicOffsets:()=>{r({oscillographicOffsetsFull:{},tempOscillographicOffsets:{}})},toggleSend:s=>{r(i=>({...i,oscillographicOffsetsFull:{...i.oscillographicOffsetsFull,[s]:{...i.oscillographicOffsetsFull[s],send:!i.oscillographicOffsetsFull[s].send}}}))},changeViewTypeForOffset:s=>{const{oscillographicOffsetsFull:i}=h(),l={...i,[s]:{...i[s],typeView:i[s].typeView==="block"?"point":i[s].typeView==="point"?"block":i[s].typeView}};r({oscillographicOffsetsFull:{...l}})},checkOffset:s=>{const{oscillographicOffsetsFull:i}=h(),l=Object.entries(i);if(l.findIndex(t=>t[0]===String(s))!==-1){const t=Object.fromEntries(l.filter(([e])=>e[0]!==String(s)));r({oscillographicOffsetsFull:{...t}})}},updateOscillographicData:(s,i)=>{r(l=>{const t={...l.oscillographicOffsetsFull},e={...l.tempOscillographicOffsets};if(Object.entries(s).forEach(([O,c])=>{const o=Number(O),a=e[o];if(a){let n=[...a.timePoints,...c.timePoints],p=[...a.values,...c.values];const u=n.map((f,g)=>({time:f,value:p[g]}));u.sort((f,g)=>f.time-g.time),n=u.map(f=>f.time),p=u.map(f=>f.value),e[o]={...a,timePoints:n,values:p}}}),i){const O=Object.fromEntries(Object.entries(e).map(([c,o])=>[c,{...o,timePoints:[],values:[]}]));return{oscillographicOffsetsFull:Object.fromEntries(Object.entries(e).map(([c,o])=>[c,{...t[Number(c)],timePoints:[...o.timePoints],values:[...o.values]}])),tempOscillographicOffsets:{...O}}}return{oscillographicOffsets:{...e}}})}}));export{b as u};
