import{c as u}from"./shallow-96V0Rfcy.js";const b=u((o,n)=>({oscillographicOffsets:{},oscillographicOffsetsFull:{},counter:0,setOscillographicOffsets:()=>{},initOscillographicOffsets:(i,s,t,e,c)=>{o(r=>({oscillographicOffsets:{...r.oscillographicOffsets,[i]:{name:s,send:!0,timePoints:[],values:[],lengthMemory:t,dataType:e,typeView:c}}}))},clearOscillographicOffsets:()=>{o({oscillographicOffsets:{}})},toggleSend:i=>{o(s=>({...s,oscillographicOffsets:{...s.oscillographicOffsets,[i]:{...s.oscillographicOffsets[i],send:!s.oscillographicOffsets[i].send}}}))},changeViewTypeForOffset:i=>{const{oscillographicOffsets:s}=n(),t={...s,[i]:{...s[i],typeView:s[i].typeView==="block"?"point":s[i].typeView==="point"?"block":s[i].typeView}};o({oscillographicOffsets:{...t}})},checkOffset:i=>{const{oscillographicOffsets:s}=n(),t=Object.entries(s);if(t.findIndex(e=>e[0]===String(i))!==-1){const e=Object.fromEntries(t.filter(([c])=>c[0]!==String(i)));o({oscillographicOffsets:{...e}})}},updateOscillographicData:i=>{let{counter:s}=n();o(t=>{const e={...t.oscillographicOffsets};if(Object.entries(i).forEach(([c,r])=>{const f=Number(c),a=e[f];if(a){let O=[...a.timePoints,...r.timePoints],p=[...a.values,...r.values];const g=O.map((l,h)=>({time:l,value:p[h]}));g.sort((l,h)=>l.time-h.time),O=g.map(l=>l.time),p=g.map(l=>l.value),e[f]={...a,timePoints:O,values:p}}}),s++,s===12){const c=Object.fromEntries(Object.entries(t.oscillographicOffsets).map(([r,f])=>[r,{...f,timePoints:[],values:[]}]));return{counter:0,oscillographicOffsetsFull:structuredClone(e),oscillographicOffsets:{...c}}}return{counter:++s,oscillographicOffsets:e}})}}));export{b as u};
