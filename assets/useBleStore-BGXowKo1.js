import{c as u}from"./shallow-CqVE0ls7.js";import{v as I}from"./v4-C6aID195.js";const E=u((r,s)=>({offsetsByTypes:{bool:[],int:[],float:[],analog:[]},offsetsOsc:[],setOscOffsets(e){r({offsetsOsc:e})},setOffsets(e,c){r({offsetsByTypes:{...s().offsetsByTypes,[c]:[...e]}})}})),T=u((r,s)=>({device:null,characteristics:{},logs:[],uuids:{serviceUuid1:"00000115-0000-1000-8000-00805f9b34fb",sendCharacteristicUuid:"00000116-0000-1000-8000-00805f9b34fb",chartCharacteristicUiid:"00000117-0000-1000-8000-00805f9b34fb",pwa_config_service_UUID:"00000101-0000-1000-8000-00805f9b34fb",pwa_config_service_rx_chararcteristic_UUID:"00000102-0000-1000-8000-00805f9b34fb",pwa_config_service_tx_chararcteristic_UUID:"00000103-0000-1000-8000-00805f9b34fb",oscill_service_UUID:"00000118-0000-1000-8000-00805f9b34fb",oscill_service_rx_chararcteristic_UUID:"00000119-0000-1000-8000-00805f9b34fb",oscill_service_tx_chararcteristic_UUID:"00000120-0000-1000-8000-00805f9b34fb"},modemParameters:{timestamp:0,timestampSubSeconds:0,latitude:0,longitude:0,altitude:0,is_valid:0,fix:0,gp_sats_in_use:0,gl_sats_in_use:0,bd_sats_in_use:0,gp_sats_in_view:0,gl_sats_in_view:0,bd_sats_in_view:0,ppsFlag:0},clearLogs(){r({logs:[]})},connect:async()=>{const{addLog:e,requestBluetoothDevice:c,connectDeviceAndCacheCharacteristic:a,startNotifications:i}=s();try{await c(),await a(),await i()}catch(t){e(`Error: ${t==null?void 0:t.message}`,"err")}},boundHandleDisconnection:()=>{const{device:e,addLog:c}=s();c(`"${e.name}"  bluetooth device disconnected`)},addLog:(e,c="")=>{const{logs:a}=s(),i={id:I(),message:e,type:c};r({logs:[...a,i]})},requestBluetoothDevice:async()=>{const{addLog:e,boundHandleDisconnection:c,uuids:a}=s();e("Requesting bluetooth device...");const i=await navigator.bluetooth.requestDevice({acceptAllDevices:!0,optionalServices:[a.oscill_service_UUID,a.pwa_config_service_UUID,a.serviceUuid1]});e(`${i.name} bluetooth device selected`),i.addEventListener("gattserverdisconnected",c),r({device:i})},connectDeviceAndCacheCharacteristic:async()=>{const{uuids:e,addLog:c,device:a}=s();c("Connecting to GATT server...");const i=await a.gatt.connect();c("GATT server connected, getting services...");const t=await i.getPrimaryService(e.serviceUuid1),o=await i.getPrimaryService(e.pwa_config_service_UUID),n=await i.getPrimaryService(e.oscill_service_UUID);c("Services founded, getting characteristics...");const g=await o.getCharacteristic(e.pwa_config_service_rx_chararcteristic_UUID),d=await o.getCharacteristic(e.pwa_config_service_tx_chararcteristic_UUID),l=await t.getCharacteristic(e.chartCharacteristicUiid),_=await t.getCharacteristic(e.sendCharacteristicUuid),f=await n.getCharacteristic(e.oscill_service_tx_chararcteristic_UUID);c("Characteristics found"),r({characteristics:{pwa_config_service_rx_chararcteristic:g,pwa_config_service_tx_chararcteristic:d,oscill_service_tx_chararcteristic:f,sendCharacteristic:_,chartCharacteristic:l}})},handleChartCharacteristicChanged:e=>{const{addLog:c}=s(),a=new TextDecoder().decode(e.target.value);console.log(a),c(a,"in")},handleModemParametrsChanged:e=>{const{addLog:c}=s(),a=new Uint8Array(e.target.value.buffer),i=new DataView(a.buffer,a.byteOffset,a.byteLength);let t=0;const o=i.getUint32(t,!0);t+=4;let n=i.getUint32(t,!0);n=n/169356432,t+=4;const d=i.getInt32(t,!0)/65536;t+=4;const _=i.getInt32(t,!0)/65536;t+=4;const h=i.getInt32(t,!0)/65536;t+=4;const v=i.getUint8(t);t+=1;const w=i.getUint8(t);t+=1;const U=i.getUint8(t);t+=1;const b=i.getUint8(t);t+=1;const p=i.getUint8(t);t+=1;const m=i.getUint8(t);t+=1;const C=i.getUint8(t);t+=1;const D=i.getUint8(t);t+=1;const y=i.getUint8(t);t+=1,r({modemParameters:{timestamp:o,timestampSubSeconds:n,latitude:d,longitude:_,altitude:h,is_valid:v,fix:w,gp_sats_in_use:U,gl_sats_in_use:b,bd_sats_in_use:p,gp_sats_in_view:m,gl_sats_in_view:C,bd_sats_in_view:D,ppsFlag:y}}),c("modem parametrs received","in")},handleTerminalChanged:e=>{const{addLog:c}=s(),a=new TextDecoder().decode(e.target.value);a.includes("\r")&&console.log("перенос строки есть"),c(a,"in")},startNotifications:async()=>{const{addLog:e,characteristics:{pwa_config_service_tx_chararcteristic:c,chartCharacteristic:a,handleChartCharacteristicChanged:i}}=s();e("Starting notifications..."),await c.startNotifications(),a.addEventListener("characteristicvaluechanged",i),e("Notifications started")},send:async e=>{const{characteristics:{sendCharacteristic:c},device:a,addLog:i}=s();try{if(e=String(e||""),!e)throw new Error("нельзя отправить пустые данные");if(!a||!c)throw new Error("необходимо подключиться к устройству");await c.writeValue(new TextEncoder().encode(`${e}\r`)),i(e,"out")}catch(t){i(`Error: ${t.message}`,"err")}},sendConfig:async e=>{const{characteristics:{pwa_config_service_rx_chararcteristic:c},device:a,addLog:i}=s();try{if(!e)throw new Error("нельзя отправить пустые данные");if(!a||!c)throw new Error("необходимо подключиться к устройству");await c.writeValue(new TextEncoder().encode(e)),i("конфигурация была отпралена","out")}catch(t){i(`Error: ${t.message}`,"err")}}}));export{T as a,E as u};
